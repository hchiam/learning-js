const { solveSudoku } = require("./solveSudoku.js");

describe("solveSudoku", () => {
  it("works", () => {
    expect(
      solveSudoku([
        [7, 8, 0, 4, 0, 0, 1, 2, 0],
        [6, 0, 0, 0, 7, 5, 0, 0, 9],
        [0, 0, 0, 6, 0, 1, 0, 7, 8],
        [0, 0, 7, 0, 4, 0, 2, 6, 0],
        [0, 0, 1, 0, 5, 0, 9, 3, 0],
        [9, 0, 4, 0, 6, 0, 0, 0, 5],
        [0, 7, 0, 3, 0, 0, 0, 1, 2],
        [1, 2, 0, 0, 0, 7, 4, 0, 0],
        [0, 4, 9, 2, 0, 6, 0, 0, 7],
      ])
    ).toEqual([
      [7, 8, 5, 4, 3, 9, 1, 2, 6],
      [6, 1, 2, 8, 7, 5, 3, 4, 9],
      [4, 9, 3, 6, 2, 1, 5, 7, 8],
      [8, 5, 7, 9, 4, 3, 2, 6, 1],
      [2, 6, 1, 7, 5, 8, 9, 3, 4],
      [9, 3, 4, 1, 6, 2, 7, 8, 5],
      [5, 7, 8, 3, 9, 4, 6, 1, 2],
      [1, 2, 6, 5, 8, 7, 4, 9, 3],
      [3, 4, 9, 2, 1, 6, 8, 5, 7],
    ]);

    expect(
      solveSudoku([
        [0, 0, 0, 0, 3, 0, 0, 0, 9],
        [0, 4, 0, 5, 0, 0, 0, 7, 8],
        [2, 9, 0, 0, 0, 1, 0, 5, 0],
        [0, 7, 8, 0, 0, 3, 0, 0, 6],
        [0, 3, 0, 0, 6, 0, 0, 8, 0],
        [6, 0, 0, 8, 0, 0, 9, 3, 0],
        [0, 6, 0, 9, 0, 0, 0, 2, 7],
        [7, 2, 0, 0, 0, 5, 0, 6, 0],
        [8, 0, 0, 0, 7, 0, 0, 0, 0],
      ])
    ).toEqual([
      [1, 8, 5, 7, 3, 6, 2, 4, 9],
      [3, 4, 6, 5, 2, 9, 1, 7, 8],
      [2, 9, 7, 4, 8, 1, 6, 5, 3],
      [5, 7, 8, 2, 9, 3, 4, 1, 6],
      [9, 3, 2, 1, 6, 4, 7, 8, 5],
      [6, 1, 4, 8, 5, 7, 9, 3, 2],
      [4, 6, 3, 9, 1, 8, 5, 2, 7],
      [7, 2, 9, 3, 4, 5, 8, 6, 1],
      [8, 5, 1, 6, 7, 2, 3, 9, 4],
    ]);
  });
});
